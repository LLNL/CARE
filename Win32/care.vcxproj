<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="CUDADebug|x64">
      <Configuration>CUDADebug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="CUDARelease|x64">
      <Configuration>CUDARelease</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseWithDebugInfo|x64">
      <Configuration>ReleaseWithDebugInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{73680F95-D8DB-30C7-A8C3-DBE81A417E2B}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>care</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
    <CudaToolkitCustomDir>$(CUDA_PATH)</CudaToolkitCustomDir>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>Intel C++ Compiler 19.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CUDADebug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>Intel C++ Compiler 19.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CUDARelease|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWithDebugInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>Intel C++ Compiler 19.0</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.1.props" Condition="exists('$(VCTargetsPath)\BuildCustomizations\CUDA 10.1.props')" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='CUDADebug|x64'">
    <Import Project="..\..\..\src\Win32\Properties\CUDA.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='CUDARelease|x64'">
    <Import Project="..\..\..\src\Win32\Properties\CUDA.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\src;.\include;..\..\umpire\src;..\..\camp\include;..\..\umpire\Win32\include;..\..\chai\src;..\..\chai\Win32\include;..\..\raja\include;..\..\raja\Win32\include;..\..\..\exports\LLNL_GlobalID;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;HAVE_CHAI=1;CARE_EXPORTS;chai_EXPORTS;JUDYSHAREDDLL_EXPORTS%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;HAVE_CHAI=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)GID64\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\$(Configuration)GID64\$(TargetFileName)"
      </Command>
      <Message>Copy $(TargetFileName) to parallel directory</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Message>Create parallel directory</Message>
      <Command>
        if not exist "$(OutDir)..\Par$(Configuration)" mkdir "$(OutDir)..\Par$(Configuration)"
        if not exist "$(OutDir)..\Par$(Configuration)GID64" mkdir "$(OutDir)..\Par$(Configuration)GID64"
        if not exist "$(OutDir)..\$(Configuration)GID64" mkdir "$(OutDir)..\$(Configuration)GID64"
      </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='CUDADebug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\src;.\include;..\..\umpire\src;..\..\camp\include;..\..\umpire\Win32\include;..\..\chai\src;..\..\chai\Win32\include;..\..\raja\include;..\..\raja\Win32\include;..\..\..\exports\LLNL_GlobalID;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;HAVE_CHAI=1;CARE_EXPORTS;chai_EXPORTS;JUDYSHAREDDLL_EXPORTS%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;HAVE_CHAI=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)GID64\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\$(Configuration)GID64\$(TargetFileName)"
      </Command>
      <Message>Copy $(TargetFileName) to parallel directory</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Message>Create parallel directory</Message>
      <Command>
        if not exist "$(OutDir)..\Par$(Configuration)" mkdir "$(OutDir)..\Par$(Configuration)"
        if not exist "$(OutDir)..\Par$(Configuration)GID64" mkdir "$(OutDir)..\Par$(Configuration)GID64"
        if not exist "$(OutDir)..\$(Configuration)GID64" mkdir "$(OutDir)..\$(Configuration)GID64"
      </Command>
    </PreBuildEvent>
    <CudaCompile>
      <Include>$(CUDA_PATH)\include</Include>
    </CudaCompile>
    <CudaCompile>
      <CudaRuntime>Shared</CudaRuntime>
    </CudaCompile>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CudaLink>
      <AdditionalLibraryDirectories>$(CUDA_PATH)\lib\x64</AdditionalLibraryDirectories>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\src;.\include;..\..\umpire\src;..\..\camp\include;..\..\umpire\Win32\include;..\..\chai\src;..\..\chai\Win32\include;..\..\raja\include;..\..\raja\Win32\include;..\..\..\exports\LLNL_GlobalID;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;HAVE_CHAI=1;CARE_EXPORTS;chai_EXPORTS;JUDYSHAREDDLL_EXPORTSNDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_CHAI=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)GID64\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\$(Configuration)GID64\$(TargetFileName)"
      </Command>
      <Message>Copy $(TargetFileName) to parallel directory</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Message>Create parallel directory</Message>
      <Command>
        if not exist "$(OutDir)..\Par$(Configuration)" mkdir "$(OutDir)..\Par$(Configuration)"
        if not exist "$(OutDir)..\Par$(Configuration)GID64" mkdir "$(OutDir)..\Par$(Configuration)GID64"
        if not exist "$(OutDir)..\$(Configuration)GID64" mkdir "$(OutDir)..\$(Configuration)GID64"
      </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='CUDARelease|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\src;.\include;..\..\umpire\src;..\..\camp\include;..\..\umpire\Win32\include;..\..\chai\src;..\..\chai\Win32\include;..\..\raja\include;..\..\raja\Win32\include;..\..\..\exports\LLNL_GlobalID;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;HAVE_CHAI=1;CARE_EXPORTS;chai_EXPORTS;JUDYSHAREDDLL_EXPORTSNDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_CHAI=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)GID64\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\$(Configuration)GID64\$(TargetFileName)"
      </Command>
      <Message>Copy $(TargetFileName) to parallel directory</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Message>Create parallel directory</Message>
      <Command>
        if not exist "$(OutDir)..\Par$(Configuration)" mkdir "$(OutDir)..\Par$(Configuration)"
        if not exist "$(OutDir)..\Par$(Configuration)GID64" mkdir "$(OutDir)..\Par$(Configuration)GID64"
        if not exist "$(OutDir)..\$(Configuration)GID64" mkdir "$(OutDir)..\$(Configuration)GID64"
      </Command>
    </PreBuildEvent>
    <CudaCompile>
      <CudaRuntime>Shared</CudaRuntime>
    </CudaCompile>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Include>$(CUDA_PATH)\include</Include>
    </CudaCompile>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CudaLink>
      <AdditionalLibraryDirectories>$(CUDA_PATH)\lib\x64</AdditionalLibraryDirectories>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseWithDebugInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\src;.\include;..\..\umpire\src;..\..\camp\include;..\..\umpire\Win32\include;..\..\chai\src;..\..\chai\Win32\include;..\..\raja\include;..\..\raja\Win32\include;..\..\..\exports\LLNL_GlobalID;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>ReleaseWithDebugInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;HAVE_CHAI=1;CARE_EXPORTS;chai_EXPORTS;JUDYSHAREDDLL_EXPORTSNDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_CHAI=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\Par$(Configuration)GID64\$(TargetFileName)"
        copy "$(OutDir)$(TargetFileName)" "$(OutDir)..\$(Configuration)GID64\$(TargetFileName)"
      </Command>
      <Message>Copy $(TargetFileName) to parallel directory</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Message>Create parallel directory</Message>
      <Command>
        if not exist "$(OutDir)..\Par$(Configuration)" mkdir "$(OutDir)..\Par$(Configuration)"
        if not exist "$(OutDir)..\Par$(Configuration)GID64" mkdir "$(OutDir)..\Par$(Configuration)GID64"
        if not exist "$(OutDir)..\$(Configuration)GID64" mkdir "$(OutDir)..\$(Configuration)GID64"
      </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\src\care\care.cpp" />
    <ClCompile Include="..\src\care\CHAICallback.cpp" />
    <ClCompile Include="..\src\care\LoopFuser.cpp" />
    <ClCompile Include="..\src\care\RAJAPlugin.cpp" />
    <ClInclude Include="..\src\care\array.h" />
    <ClInclude Include="..\src\care\array_utils.h" />
    <ClInclude Include="..\src\care\CHAICallback.h" />
    <ClInclude Include="..\src\care\CHAIDataGetter.h" />
    <ClInclude Include="..\src\care\CUDAWatchpoint.h" />
    <ClInclude Include="..\src\care\DefaultMacros.h" />
    <ClInclude Include="..\src\care\device_ptr.h" />
    <ClInclude Include="..\src\care\ExecutionSpace.h" />
    <ClInclude Include="..\src\care\forall.h" />
    <ClInclude Include="..\src\care\FOREACHMACRO.h" />
    <ClInclude Include="..\src\care\host_device_ptr.h" />
    <ClInclude Include="..\src\care\host_ptr.h" />
    <ClInclude Include="..\src\care\KeyValueSorter.h" />
    <ClInclude Include="..\src\care\local_host_device_ptr.h" />
    <ClInclude Include="..\src\care\local_ptr.h" />
    <ClInclude Include="..\src\care\LoopFuser.h" />
    <ClInclude Include="..\src\care\SortFuser.h" />
    <ClInclude Include="..\src\care\numeric.h" />
    <ClInclude Include="..\src\care\PointerTypes.h" />
    <ClInclude Include="..\src\care\policies.h" />
    <ClInclude Include="..\src\care\care.h" />
    <ClInclude Include="..\src\care\RAJAPlugin.h" />
    <ClInclude Include="..\src\care\scan.h" />
    <ClInclude Include="..\src\care\Setup.h" />
    <ClInclude Include="..\src\care\single_access_ptr.h" />
    <ClInclude Include="..\src\care\util.h" />
    <ClInclude Include="include\care\config.h" />
    <ClInclude Include="resource.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\chai\Win32\chai.vcxproj">
      <Project>{2d980298-7258-3672-a49f-5f323802d26a}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\umpire\Win32\umpire.vcxproj">
      <Project>{8b884c3a-651b-3b63-826a-5d024c31c87d}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="care.rc" />
  </ItemGroup>
  <ItemGroup>
    <Natvis Include="NatvisFile.natvis" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.1.targets" Condition="exists('$(VCTargetsPath)\BuildCustomizations\CUDA 10.1.props')" />
  </ImportGroup>
</Project>
